# Start configuration added by Zim install {{"{{{"}}
#
# User configuration sourced by interactive shells
#

# -----------------
# Zsh configuration
# -----------------

# Remove path separator from WORDCHARS.
WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'

GEOMETRY_INFO=""
GEOMETRY_PROMPT=(geometry_echo geometry_status geometry_jobs geometry_path)
GEOMETRY_RPROMPT=(geometry_exec_time geometry_git geometry_kube_symbol geometry_kube_context geometry_kube_namespace)
GEOMETRY_EXEC_TIME_PATIENCE=3
GEOMETRY_KUBE_VERSION_COLOR=red
GEOMETRY_KUBE_NAMESPACE_COLOR=green
GEOMETRY_KUBE_CONTEXT_COLOR=cyan

# -----------------
# Zim configuration
# -----------------

# Use degit instead of git as the default tool to install and update modules.
#zstyle ':zim:zmodule' use 'degit'

# --------------------
# Module configuration
# --------------------

#
# completion
#

# Set a custom path for the completion dump file.
# If none is provided, the default ${ZDOTDIR:-${HOME}}/.zcompdump is used.
#zstyle ':zim:completion' dumpfile "${ZDOTDIR:-${HOME}}/.zcompdump-${ZSH_VERSION}"

#
# git
#

# Set a custom prefix for the generated aliases. The default prefix is 'G'.
#zstyle ':zim:git' aliases-prefix 'g'

#
# input
#

# Append `../` to your input for each `.` you type after an initial `..`
#zstyle ':zim:input' double-dot-expand yes

#
# termtitle
#

# Set a custom terminal title format using prompt expansion escape sequences.
# See http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Simple-Prompt-Escapes
# If none is provided, the default '%n@%m: %~' is used.
#zstyle ':zim:termtitle' format '%1~'

#
# zsh-autosuggestions
#

# Customize the style that the suggestions are shown with.
# See https://github.com/zsh-users/zsh-autosuggestions/blob/master/README.md#suggestion-highlight-style
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=242'

#
# zsh-syntax-highlighting
#

# Set what highlighters will be used.
# See https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters.md
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

# Customize the main highlighter styles.
# See https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters/main.md#how-to-tweak-it
#typeset -A ZSH_HIGHLIGHT_STYLES
#ZSH_HIGHLIGHT_STYLES[comment]='fg=242'

# ------
# Custom
# ------
HISTORY_IGNORE='(sec set * *)'
#
# zsh-vi-mode
#
ZVM_VI_EDITOR=nvim

function zvm_config() {
  ZVM_KEYTIMEOUT=0.05
  ZVM_INSERT_MODE_CURSOR=$ZVM_CURSOR_BLINKING_BEAM
  ZVM_NORMAL_MODE_CURSOR=$ZVM_CURSOR_BLOCK
  ZVM_LINE_INIT_MODE=$ZVM_MODE_INSERT
}

function zvm_after_init() {
  zvm_bindkey viins '^[[Z' autosuggest-accept
  zvm_bindkey viins '^[[H' beginning-of-line
  zvm_bindkey viins '^[[F' end-of-line
  zvm_bindkey viins '≠'    backward-delete-word
  zvm_bindkey viins '˙'    backward-word
  zvm_bindkey viins '¬'    forward-word
  zvm_bindkey viins '®'    insertPreviousArg
  zvm_bindkey vicmd '^V'   edit-command-line
  zvm_bindkey vicmd '^R'   redo
}


{{ template "zim-module-init" }}

# ------------------------------
# Post-init module configuration
# ------------------------------
#

# ZLE reference: https://zsh.sourceforge.io/Doc/Release/Zsh-Line-Editor.html#Standard-Widgets
#
# Bind ^[[A/^[[B manually so up/down works both before and after zle-line-init
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

zmodload -F zsh/terminfo +p:terminfo

# add shift-tab to do reverse menu selects
zmodload zsh/complist
if [[ -n ${terminfo[kcbt]} ]]; then
  bindkey -M menuselect ${terminfo[kcbt]} reverse-menu-complete
fi

# Bind up and down keys
if [[ -n ${terminfo[kcuu1]} && -n ${terminfo[kcud1]} ]]; then
  bindkey ${terminfo[kcuu1]} history-substring-search-up
  bindkey ${terminfo[kcud1]} history-substring-search-down
fi

bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down
# }}} End configuration added by Zim install

if [ -f ${HOMEBREW_PREFIX}/etc/brew-wrap ]; then
  source ${HOMEBREW_PREFIX}/etc/brew-wrap
fi
